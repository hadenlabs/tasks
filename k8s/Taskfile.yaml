---
version: "3"

tasks:
  destroy-stuck-ns:
    desc: "Remove finalizers from stuck Kubernetes namespaces"
    vars:
      PROXY_PORT: '{{ .PROXY_PORT | default "8001" }}'
    cmds:
      - |
        # Find all namespaces in Terminating state
        TERMINATING_NS=$(kubectl get ns --field-selector status.phase=Terminating -o jsonpath='{.items[*].metadata.name}')

        if [ -z "$TERMINATING_NS" ]; then
            echo "No stuck namespaces found"
            exit 0
        fi

        echo "Found stuck namespaces: $TERMINATING_NS"

        cleanup_proxy() {
            local proxy_pid=$1
            local proxy_port=$2
            if [ ! -z "$proxy_pid" ]; then
                # Kill the proxy and any child processes
                pkill -P $proxy_pid
                kill -9 $proxy_pid 2>/dev/null || true
                # Additional cleanup to ensure no hanging processes
                lsof -ti:$proxy_port | xargs -r kill -9
            fi
        }

        # Process each namespace in parallel
        for ns in $TERMINATING_NS; do
            (
                echo "Removing finalizers from namespace: $ns"
                # Get the namespace definition
                kubectl get namespace $ns -o json > tmp_$ns.json
                # Remove finalizers
                cat tmp_$ns.json | jq '.spec.finalizers = []' > tmp_clean_$ns.json

                # Start proxy with proper cleanup
                kubectl proxy --port={{ .PROXY_PORT }} &
                PROXY_PID=$!

                # Ensure proxy cleanup happens on script exit
                trap "cleanup_proxy $PROXY_PID {{ .PROXY_PORT }}" EXIT

                sleep 1

                if ! curl -k -H "Content-Type: application/json" -X PUT --data-binary @tmp_clean_$ns.json http://127.0.0.1:{{ .PROXY_PORT }}/api/v1/namespaces/$ns/finalize; then
                    echo "Failed to update namespace: $ns"
                    cleanup_proxy $PROXY_PID {{ .PROXY_PORT }}
                    exit 1
                fi

                # Clean up temporary files
                rm -f tmp_$ns.json tmp_clean_$ns.json

                # Cleanup proxy explicitly after successful completion
                cleanup_proxy $PROXY_PID {{ .PROXY_PORT }}

                printf "Completed processing namespace: %s\n" "$ns"
            ) &
        done

        # Wait for all background processes to complete
        wait
        echo "All stuck namespaces have been processed"
